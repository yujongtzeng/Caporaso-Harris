#BlueJ class context
comment0.target=F0table
comment0.text=\n\ <p>\n\ The\ F0table\ class\ uses\ dynamic\ programming\ approach\ to\ implement\ the\ \n\ recursive\ formula\ of\ Vakil\ in\ "Counting\ curves\ on\ rational\ surfaces"\ \n\ to\ compute\ the\ number\ of\ singular\ curves\ on\ P^1*P^1\ which\ satisfy\ tangency\ \n\ conditions\ with\ a\ given\ line\ in\ |O(1,0)|.\ \n\ <p>\n\ The\ user\ needs\ to\ enter\ a,\ b\ and\ maxNode.\ \n\ <p>\n\ (a,b)\:\ the\ maximal\ bi-degrees\ of\ the\ curve\ class\ <br>\n\ maxNode\:\ \ max\ difference\ between\ the\ arithmetic\ genus\ and\ geometric\ genus\ of\ \n\ the\ curve\ the\ program\ will\ compute.\ \ \n\ <p>\n\ The\ program\ will\ print\ our\ the\ number\ of\ genus\ g\ curves\ in\ |O(i,b)|\ on\ \n\ P^1*P^1\ which\ satisfy\ tangency\ conditions\ (alpha,\ beta)\ with\ a\ given\ line\ \n\ in\ |O(1,0)|\ for\ \ <br\ />\n\ 1)\ (i,b)\ for\ i\ \=\ (a\ -\ 5\ +\ 1),...,\ a\ (due\ to\ the\ recursive\ nature\ \n\ of\ Vakil's\ formula)\ (5\ is\ the\ default\ number\ and\ can\ be\ changed\ by\ \n\ modifying\ the\ instance\ variable\ printLast),\ \ <br\ />\n\ 2)\ all\ g\ between\ (arithmetic\ genus\ of\ O(i,b)\ -\ maxNode)\ and\ \n\ \ \ \ arithmetic\ genus\ of\ O(i,b),\ \ <br\ />\n\ 3)\ all\ valid\ tangency\ conditions\ alpha\ and\ beta\ \n\ \ \ \ (valid\ \=\ satisfy\ I(alpha)+I(beta)\ \=\ b).\ \n\ <p>\n\ alpha\ \:\ tangency\ conditions\ at\ assigned\ points.\ \ <br>\n\ beta\ \:\ tangency\ conditions\ at\ unassigned\ points.\ \n\ beta\ \=\ (beta_1,\ beta_2,....)\n\ <p>\n\ Note\ on\ algorithm\:\ \ <br\ />\n\ alpha\ and\ beta\ are\ stored\ by\ integer\ arrays.\ The\ length\ of\ them\ (and\ \n\ variations)\ are\ of\ fixed\ length\ \=\ maxLength\ \=\ b\ +\ maxNode\ +\ 1.\ This\ is\ \n\ because\ <br>\n\ g'\ \=\ g-|gamma|+1\ -->\ |gamma|\ <\=\ g\ -\ g'\ +\ 1\ \=\ maxNode\ +1\ \n\ <br>\n\ maxLength\ \=\ |beta'|\ \=\ |beta+gamma|\ <\=\ |beta|+|gamma|\ <\=\ b+\ maxNode\ +1.\n\ <br>\n\ All\ methods\ in\ arrayOP\ will\ check\ if\ the\ length\ of\ inputs\ equals\ maxLength.\ \n\ <p>\n\ The\ output\ numbers\ will\ be\ located\ at\ output/F0\ <br>\n\ All\ terms\ in\ the\ generating\ series\ satisfying\ total\ degree\ <\=\ 5\ and\ \n\ weighted\ degree\ <\=\ 10\ will\ be\ written\ in\ files\ at\ output/genFunF0.\ <br>\n\ wdeg\ r\ \=\ 0,\ wdeg\ b\ \=\ 2,\ wdeg\ c\ \=\ 3,\ .....\n\ <p>\n\ @author\ Yu-jong\ Tzeng\n\ @version\ 2.0\n\ @since\ August\ 24,\ 2019.\n
comment1.params=a\ b\ maxNode
comment1.target=F0table(int,\ int,\ int)
comment1.text=\n\ The\ constructor\ of\ the\ class.\n\ @param\ a\ the\ number\ of\ ample\ class\ h\ in\ the\ curve\ class\ O(a,b)\n\ @param\ b\ the\ number\ of\ fiber\ class\ h\ in\ the\ curve\ class\ O(a,b)\n\ @param\ maxNode\ the\ max\ difference\ between\ arithmetic\ genus\ and\ geometric\ \n\ genus\ of\ the\ curve\ we'll\ compute\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment2.text=\ \n\ Call\ this\ method\ compute\ the\ results\ and\ generate\ output.\ \n\ User\ needs\ to\ enter\ a,\ b,\ and\ maxNode.\ \n\ @param\ args\ Unused\n
comment3.params=
comment3.target=void\ compute()
comment3.text=\ \n\ Run\ this\ method\ to\ compute\ and\ create\ output\ file.\ \ \n
comment4.params=aa\ bb\ g\ alpha\ beta
comment4.target=long\ N(int,\ int,\ int,\ int[],\ int[])
comment4.text=\ \n\ The\ recursive\ formula\ is\ implemented\ here.\ \n
numComments=5
